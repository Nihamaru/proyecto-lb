{
  "version": 3,
  "file": "auto-update.js",
  "sourceRoot": "../src/",
  "sources": [
    "auto-update.coffee"
  ],
  "names": [],
  "mappings": "AAAA;AAAA,MAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAAA;;EAAA,OAAA,GAAgB,OAAA,CAAQ,UAAR;;EAChB,IAAA,GAAgB,OAAA,CAAQ,MAAR;;EAChB,UAAA,GAAgB,OAAA,CAAQ,8BAAR;;EAChB,WAAA,GAAgB,OAAA,CAAQ,+BAAR;;EAChB,KAAA,GAAgB,OAAA,CAAQ,OAAR,CAAA,CAAiB,2CAAjB;;EAChB,OAAA,GAAgB,OAAA,CAAQ,eAAR;;EAChB,MAAA,GAAgB,OAAA,CAAQ,OAAA,GAAU,2BAAlB;;EAChB,UAAA,GAAgB,OAAA,CAAQ,eAAR;;EAEhB,WAAA,GAAc,QAAA,CAAC,EAAD,EAAK,KAAL,CAAA;WACZ,IAAI,OAAJ,CAAY,QAAA,CAAC,OAAD,EAAU,MAAV,CAAA;MACV,EAAE,CAAC,eAAH,CAAmB,CAAnB;MACA,IAAG,EAAE,CAAC,SAAN;eACE,EAAE,CAAC,QAAH,CAAY,KAAZ,EAAmB,QAAA,CAAC,GAAD,EAAM,MAAN,CAAA,EAAA;;UAEjB,IAAG,GAAH;mBAAY,MAAA,CAAO,GAAP,EAAZ;WAAA,MAAA;mBAA6B,OAAA,CAAQ,MAAR,EAA7B;;QAFiB,CAAnB,EADF;OAAA,MAAA;eAKE,EAAE,CAAC,IAAH,CAAQ,WAAR,EAAqB,QAAA,CAAA,CAAA;iBACnB,EAAE,CAAC,QAAH,CAAY,KAAZ,EAAmB,QAAA,CAAC,GAAD,EAAM,MAAN,CAAA,EAAA;;YAEjB,IAAG,GAAH;qBAAY,MAAA,CAAO,GAAP,EAAZ;aAAA,MAAA;qBAA6B,OAAA,CAAQ,MAAR,EAA7B;;UAFiB,CAAnB;QADmB,CAArB,EALF;;IAFU,CAAZ;EADY,EATd;;;EAuBA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,EAAM,OAAN,CAAA;AACf,QAAA,WAAA,EAAA;IAAA,OAAA,GAAU;IACV,WAAA,GAAc,CAAC,OAAA,IAAY,OAAO,CAAC,MAArB,CAAA,IAAgC;WAC9C,OAAO,CAAC,MAAR,CAAe,WAAf,EAA4B,QAAA,CAAC,KAAD,EAAQ,KAAR,CAAA;AAC1B,UAAA;MAAA,EAAA,GAAK,GAAG,CAAC,WAAY,CAAA,MAAO,CAAA,KAAA,CAAM,CAAC,UAAd;aACrB,WAAA,CAAY,EAAZ,EAAgB,KAAhB,CAAsB,CAAC,IAAvB,CAA4B,QAAA,CAAC,MAAD,CAAA;eAAW,CAAC;MAAZ,CAA5B;IAF0B,CAA5B,CAGA,CAAC,GAHD,CAGK,QAAA,CAAC,KAAD,EAAQ,KAAR,CAAA;AACH,UAAA;MAAA,EAAA,GAAK,GAAG,CAAC,WAAY,CAAA,MAAO,CAAA,KAAA,CAAM,CAAC,UAAd;aACrB,EAAE,CAAC,UAAH,CAAc,KAAd;IAFG,CAHL,CAMA,CAAC,IAND,CAMM,QAAA,CAAC,IAAD,EAAO,KAAP,CAAA;MACJ,IAAA,CAAiC,IAAjC;QAAA,IAAA,GAAO,WAAY,CAAA,KAAA,EAAnB;;MACA,KAAA,CAAM,QAAA,GAAW,IAAX,GAAkB,cAAxB;aACA,OAAO,CAAC,IAAR,CAAa,GAAG,CAAC,MAAO,CAAA,IAAA,CAAxB;IAHI,CANN,CAUA,CAAC,IAVD,CAUM,QAAA,CAAC,OAAD,CAAA;MACJ,KAAA,CAAM,QAAA,GAAS,OAAO,CAAC,MAAjB,GAAyB,kBAA/B;AACA,aAAO;IAFH,CAVN;EAHe;AAvBjB",
  "sourcesContent": [
    "Promise       = require \"bluebird\"\npath          = require 'path'\nisFunction    = require 'util-ex/lib/is/type/function'\nisUndefined   = require 'util-ex/lib/is/type/undefined'\ndebug         = require('debug')('loopback:component:autoMigrate:autoUpdate')\nappRoot       = require 'app-root-path'\nmodels        = require appRoot + '/server/model-config.json'\nmodelNames    = require './model-names'\n\nisSyncModel = (ds, model)->\n  new Promise (resolve, reject)->\n    ds.setMaxListeners(0)\n    if ds.connected\n      ds.isActual model, (err, actual)->\n        #True when data source and database is in sync\n        if err then reject(err) else resolve(actual)\n    else\n      ds.once 'connected', ->\n        ds.isActual model, (err, actual)->\n          #True when data source and database is in sync\n          if err then reject(err) else resolve(actual)\n\n# drop all tables and create all tables from models.\nmodule.exports = (app, options)->\n  vModels = []\n  vModelNames = (options and options.models) || modelNames\n  Promise.filter vModelNames, (model, index)->\n    ds = app.dataSources[models[model].dataSource]\n    isSyncModel(ds, model).then (actual)-> !actual\n  .map (model, index)->\n    ds = app.dataSources[models[model].dataSource]\n    ds.autoupdate(model)\n  .each (item, index)->\n    item = vModelNames[index] unless item\n    debug 'Model ' + item + ' autoupdated'\n    vModels.push app.models[item]\n  .then (results)->\n    debug 'total '+results.length+ ' models updated.'\n    return vModels\n\n"
  ]
}