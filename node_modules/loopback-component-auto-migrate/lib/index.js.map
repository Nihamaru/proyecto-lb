{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA;AAAA,MAAA,KAAA,EAAA,QAAA,EAAA,WAAA,EAAA;;EACA,OAAA,CAAQ,+BAAR;;EAEA,KAAA,GAAc,OAAA,CAAQ,OAAR,CAAA,CAAiB,qCAAjB;;EACd,IAAA,GAAc,OAAA,CAAQ,MAAR;;EACd,QAAA,GAAc,OAAA,CAAQ,4BAAR;;EACd,WAAA,GAAc,CAAC,OAAA,CAAQ,kBAAR,CAAD,CAA4B,CAAC;;EAE3C,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,EAAM,OAAN,CAAA;AACf,QAAA,WAAA,EAAA,eAAA,EAAA,QAAA,EAAA,aAAA,EAAA,SAAA,EAAA,UAAA,EAAA;IAAA,KAAA,CAAM,wBAAN;IACA,IAAG,GAAG,CAAC,GAAJ,CAAQ,wCAAR,CAAH;MACE,KAAA,CAAM,mBAAN;AACA,aAFF;;IAGA,QAAA,GAAW,GAAG,CAAC;IACf,aAAA,GAAgB,QAAA,IAAa,QAAQ,CAAC,OAAtB,IAAkC,QAAQ,CAAC,OAAO,CAAC,KAAjB,CAAuB,GAAvB,CAA4B,CAAA,CAAA,CAA9D,IAAoE;IACpF,IAAG,aAAA,GAAgB,CAAnB;MACE,MAAM,IAAI,KAAJ,CAAU,gEAAV,EADR;;IAGA,IAAG,CAAC,OAAD,IAAY,OAAO,CAAC,OAAR,KAAqB,KAApC;MACE,SAAA,GAAY,CAAC,OAAA,IAAY,OAAO,CAAC,SAArB,CAAA,IAAmC;MAC/C,WAAA,GAAc,OAAA,CAAQ,IAAA,GAAO,SAAf;MACd,UAAA,GAAc,OAAA,IAAY,OAAO,CAAC;MAClC,GAAG,CAAC,GAAJ,CAAQ,wCAAR,EAAkD,QAAlD;MACA,OAAA,GAAW,OAAA,IAAY,OAAO,CAAC;MAE/B,IAAuD,QAAA,CAAS,OAAT,CAAvD;;QAAA,OAAO,CAAC,MAAR,GAAiB,WAAA,CAAY,IAAI,CAAC,OAAL,CAAa,OAAb,CAAZ,EAAjB;;MAEA,eAAA,GAAkB,WAAA,CAAY,GAAZ,EAAiB,OAAjB,CAChB,CAAC,UADe,CACJ,QAAA,CAAC,GAAD,CAAA;QACV,IAAG,GAAH;UACE,GAAG,CAAC,GAAJ,CAAQ,uCAAR,EAAiD,GAAjD;UACA,GAAG,CAAC,GAAJ,CAAQ,wCAAR,EAAkD,QAAlD;UACA,KAAA,CAAM,SAAA,GAAY,aAAlB,EAAiC,GAAjC;UACA,IAAa,UAAb;YAAA,MAAM,IAAN;WAJF;SAAA,MAAA;iBAME,GAAG,CAAC,GAAJ,CAAQ,wCAAR,EAAkD,MAAlD,EANF;;MADU,CADI;MAUlB,GAAG,CAAC,GAAJ,CAAQ,sCAAR,EAAgD,eAAhD,EAlBA;AAoBA,aAAO,gBArBT;KAAA,MAAA;aAuBE,KAAA,CAAM,uBAAN,EAvBF;;EAVe;AARjB",
  "sourcesContent": [
    "'use strict'\nrequire './register-config-file-format'\n\ndebug       = require('debug')('loopback:component:autoMigrate:main')\npath        = require 'path'\nisString    = require 'util-ex/lib/is/type/string'\nloadCfgSync = (require 'load-config-file').loadSync\n\nmodule.exports = (app, options) ->\n  debug 'initializing component'\n  if app.get('loopback-component-auto-migrate-status')\n    debug 'already migrating'\n    return\n  loopback = app.loopback\n  loopbackMajor = loopback and loopback.version and loopback.version.split('.')[0] or 1\n  if loopbackMajor < 2\n    throw new Error('loopback-component-auto-migrate requires loopback 2.0 or newer')\n\n  if !options or options.enabled isnt false\n    migration = (options and options.migration) or 'auto-update'\n    autoMigrate = require './' + migration\n    raiseError = (options and options.migration)\n    app.set('loopback-component-auto-migrate-status', 'loaded')\n    vModels = (options and options.models)\n    # a config file location instead of passing all list inside 'component-config.json'\n    options.models = loadCfgSync(path.resolve(vModels)) if isString vModels\n\n    autoMigrateDone = autoMigrate(app, options)\n      .asCallback (err)->\n        if err\n          app.set('loopback-component-auto-migrate-error', err)\n          app.set('loopback-component-auto-migrate-status', 'failed')\n          debug migration + ' failed: %O', err\n          throw err if raiseError\n        else\n          app.set('loopback-component-auto-migrate-status', 'done')\n\n    app.set('loopback-component-auto-migrate-done', autoMigrateDone) # set the `done` promise of the `autoMigrate()` call\n\n    return autoMigrateDone\n  else\n    debug 'component not enabled'\n"
  ]
}