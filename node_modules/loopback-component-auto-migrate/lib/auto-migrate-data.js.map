{
  "version": 3,
  "file": "auto-migrate-data.js",
  "sourceRoot": "../src/",
  "sources": [
    "auto-migrate-data.coffee"
  ],
  "names": [],
  "mappings": "AAAA;AAAA,MAAA,OAAA,EAAA,WAAA,EAAA;;EAAA,OAAA,GAAc,OAAA,CAAQ,UAAR;;EAEd,WAAA,GAAc,OAAA,CAAQ,gBAAR;;EACd,YAAA,GAAc,OAAA,CAAQ,kBAAR,EAHd;;;EAMA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,IAAD,EAAO,QAAP,CAAA;AACf,QAAA,WAAA,EAAA,UAAA,EAAA;IAAA,MAAA,GAAS,WAAA,CAAY,IAAZ,EAAkB,QAAlB;IACT,WAAA,GAAc,QAAA,IAAa,QAAQ,CAAC;IACpC,UAAA,sBAAa,QAAQ,CAAE;IACvB,IAAG,WAAH;MACE,MAAA,GAAS,MAAM,CAAC,IAAP,CAAY,QAAA,CAAC,MAAD,CAAA;QACnB,IAAG,WAAH;UACE,MAAA,GAAS,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,QAAA,CAAC,KAAD,EAAQ,KAAR,CAAA;mBAC3B,YAAA,CAAa,IAAb,EAAmB,KAAnB,EAA0B,WAA1B,EAAuC,UAAvC;UAD2B,CAApB,EADX;;eAGA;MAJmB,CAAZ,EADX;;WAMA;EAVe;AANjB",
  "sourcesContent": [
    "Promise     = require 'bluebird'\n\nautomigrate = require './auto-migrate'\nloadDataFrom= require './load-data-from'\n\n# Migrate database and import data(if aDataFolder exists)\nmodule.exports = (aApp, aOptions) ->\n  result = automigrate(aApp, aOptions)\n  aDataFolder = aOptions and aOptions.fixtures\n  raiseError = aOptions?.raiseError\n  if aDataFolder\n    result = result.then (models)->\n      if aDataFolder\n        models = Promise.map models, (model, index)->\n          loadDataFrom(aApp, model, aDataFolder, raiseError)\n      models\n  result\n"
  ]
}